package web_exchange

import "github.com/FilipBudzynski/book_it/internal/models"
import "fmt"

templ ExchangeModal() {
	<form method="dialog">
		<button
			class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
		>âœ•</button>
	</form>
	<h3 class="text-lg font-bold">New Exchange Request</h3>
	<div class="flex-row relative">
		<form id="exchange-form">
			<div class="mb-4 grid grid-cols-2 gap-8">
				<input name="desired-book-id" id="book-id-input" class="input hidden input-bordered w-full mt-2"/>
				<div>
					<label class="block text-md font-medium text-gray-700">Desired Book</label>
					<div class="flex justify-normal mt-2">
						<input
							id="book-title"
							name="book-title"
							type="text"
							class="input w-full grow mr-2"
							placeholder="Start typing to search for books..."
							hx-get="/books/reduced/search"
							hx-trigger="keyup changed delay:100ms"
							hx-target="#book-results"
							hx-swap="innerHTML"
							_="on click 
                            set innerHTML of #book-results to '' 
                            then show #book-results"
						/>
						<div
							class="btn btn-error"
							_="on click
                            set #book-id-input[@value] to '' then 
                            set #book-title's value to '' then 
                            set {disabled: false} on #book-title"
						>x</div>
					</div>
					<div
						id="book-results"
						class="absolute z-9 mt-2 w-1/2 max-h-60 overflow-y-auto shadow-lg"
					></div>
				</div>
				<div>
					<label class="block text-md font-medium text-gray-700">Offered Books</label>
					<div
						hx-get="/user-books/exchange/books"
						hx-trigger="load"
						id="offered-books-containter"
					></div>
				</div>
			</div>
			<!-- if there is a button in form, it will close the modal -->
			<div class="modal-action">
				<button
					class="btn"
					hx-post="/exchange"
					hx-target="#exchanges-table-body"
					hx-swap="beforeend"
					onclick="exchange_modal.close()"
				>Submit</button>
			</div>
		</form>
	</div>
}

templ OfferedBooks(userBooks []*models.UserBook) {
	for i := 0; i < 5; i++ {
		<div class="flex items-center mt-2 offered_book">
			@SelectFromMyBooks(userBooks, i)
		</div>
	}
}

templ SelectFromMyBooks(userBooks []*models.UserBook, idx int) {
	<select name={ fmt.Sprintf("offered-book-%d", idx) } class="select select-bordered w-full mt-2" form="exchange-form">
		<option disabled selected>Choose book</option>
		for _, userBook := range userBooks {
			<option value={ userBook.BookID }>{ userBook.Book.Title }</option>
		}
	</select>
}
